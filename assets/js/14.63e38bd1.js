(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{373:function(t,a,s){"use strict";s.r(a);var e=s(42),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"托管-api-功能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#托管-api-功能"}},[t._v("#")]),t._v(" 托管 API 功能")]),t._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#接口鉴权"}},[t._v("接口鉴权")]),s("ul",[s("li",[s("a",{attrs:{href:"#打开鉴权"}},[t._v("打开鉴权")])]),s("li",[s("a",{attrs:{href:"#请求需要鉴权的接口"}},[t._v("请求需要鉴权的接口")])])])]),s("li",[s("a",{attrs:{href:"#面板"}},[t._v("面板")]),s("ul",[s("li",[s("a",{attrs:{href:"#artifact-分类"}},[t._v("Artifact 分类")])])])]),s("li",[s("a",{attrs:{href:"#接口"}},[t._v("接口")]),s("ul",[s("li",[s("a",{attrs:{href:"#下载-artifact"}},[t._v("下载 Artifact")])]),s("li",[s("a",{attrs:{href:"#直接导出-provider"}},[t._v("直接导出 Provider")])]),s("li",[s("a",{attrs:{href:"#直接渲染模板"}},[t._v("直接渲染模板")])]),s("li",[s("a",{attrs:{href:"#正向代理"}},[t._v("正向代理")])])])])])]),s("p"),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("p",[t._v("请先参考 "),s("RouterLink",{attrs:{to:"/guide/advance/api-gateway.html"}},[t._v("文档")]),t._v(" 搭建托管 API")],1)]),t._v(" "),s("h2",{attrs:{id:"接口鉴权"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#接口鉴权"}},[t._v("#")]),t._v(" 接口鉴权")]),t._v(" "),s("h3",{attrs:{id:"打开鉴权"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#打开鉴权"}},[t._v("#")]),t._v(" 打开鉴权")]),t._v(" "),s("p",[t._v("在 "),s("code",[t._v("surgio.conf.js")]),t._v(" 中增加如下字段：")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  gateway"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    auth"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    accessToken"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'YOUR_PASSWORD'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("h3",{attrs:{id:"请求需要鉴权的接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#请求需要鉴权的接口"}},[t._v("#")]),t._v(" 请求需要鉴权的接口")]),t._v(" "),s("p",[t._v("请在请求的 URL 中加入参数 "),s("code",[t._v("access_token")]),t._v("，值为上面所设。")]),t._v(" "),s("h4",{attrs:{id:"未开启鉴权"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#未开启鉴权"}},[t._v("#")]),t._v(" 未开启鉴权")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("https://xxxxxx.xxx.now.sh/list-artifact\n")])])]),s("h4",{attrs:{id:"开启鉴权"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开启鉴权"}},[t._v("#")]),t._v(" 开启鉴权")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("https://xxxxxx.xxx.now.sh/list-artifact?access_token=YOUR_PASSWORD\n")])])]),s("h2",{attrs:{id:"面板"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#面板"}},[t._v("#")]),t._v(" 面板")]),t._v(" "),s("p",[t._v("直接打开 Vercel 分配的域名就可以看到新版的面板。如果开启了鉴权则需登录。")]),t._v(" "),s("h3",{attrs:{id:"artifact-分类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#artifact-分类"}},[t._v("#")]),t._v(" Artifact 分类")]),t._v(" "),s("p",[t._v("Artifact 配置新增分类，方便在面板中找到想要的 Artifact。Surgio 内置了一些常用的类型，并且还为内置分类增加了个性化的功能。")]),t._v(" "),s("p",[s("code",[t._v("categories")]),t._v(" 接受一个数组，数组内容可以自定也可以使用内置字段。")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" categories "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'surgio'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nmodule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  artifacts"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'SurgeV3.conf'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      template"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'surge_v3'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      provider"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'demo'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      categories"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Maying'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        categories"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SURGE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Surge.conf'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      template"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'surge'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      provider"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'demo'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      categories"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        categories"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SURGE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("以下是所有的内置分类字段：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("categories.SNIPPET")]),t._v(" - 片段")]),t._v(" "),s("li",[s("code",[t._v("categories.SURGE")]),t._v(" - Surge")]),t._v(" "),s("li",[s("code",[t._v("categories.QUANTUMULT_X")]),t._v(" - Quantumult X 完整配置")]),t._v(" "),s("li",[s("code",[t._v("categories.QUANTUMULT_X_SERVER")]),t._v(" - Remote Server 片段")]),t._v(" "),s("li",[s("code",[t._v("categories.QUANTUMULT_X_FILTER")]),t._v(" - Remote Filter 片段")]),t._v(" "),s("li",[s("code",[t._v("categories.QUANTUMULT_X_REWRITE")]),t._v(" - Remote Rewrite 片段")]),t._v(" "),s("li",[s("code",[t._v("categories.CLASH")]),t._v(" - 完整 Clash 配置")])]),t._v(" "),s("h2",{attrs:{id:"接口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#接口"}},[t._v("#")]),t._v(" 接口")]),t._v(" "),s("h3",{attrs:{id:"下载-artifact"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#下载-artifact"}},[t._v("#")]),t._v(" 下载 Artifact")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("GET /get-artifact/<artifactName>\n")])])]),s("Badge",{attrs:{text:"需要鉴权",vertical:"middle"}}),t._v(" "),s("h4",{attrs:{id:"可选-url-参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可选-url-参数"}},[t._v("#")]),t._v(" 可选 URL 参数")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("参数")]),t._v(" "),s("th",[t._v("可选值")]),t._v(" "),s("th",[t._v("备注")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("format")])]),t._v(" "),s("td",[s("code",[t._v("surge-policy")]),t._v(", "),s("code",[t._v("qx-server")]),t._v(", "),s("code",[t._v("clash-provider")])]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[s("code",[t._v("filter")])]),t._v(" "),s("td",[t._v("内置的过滤器或自定义过滤器")]),t._v(" "),s("td")])])]),t._v(" "),s("p",[t._v("定义：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("surge-policy")]),t._v(" Surge 远程节点 Policy")]),t._v(" "),s("li",[s("code",[t._v("qx-server")]),t._v(" QuantumultX 远程节点")]),t._v(" "),s("li",[s("code",[t._v("clash-provider")]),t._v(" "),s("a",{attrs:{href:"https://www.notion.so/New-Feature-Clash-Proxy-Provider-ff8d1955f6234ad3a779fecd3b3ea007",target:"_blank",rel:"noopener noreferrer"}},[t._v("Clash Provider"),s("OutboundLink")],1)])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("format")]),t._v(" 使用的是内置的模板，所以你不需要额外定义模板格式，不过仍然需要定义一个完整的 Artifact。我的建议是定义一个有完整节点的 Artifact，然后根据需要过滤出节点；")]),t._v(" "),s("li",[s("code",[t._v("filter")]),t._v(" 的值为过滤器的名称。你可以直接使用内置的过滤器，例如 "),s("code",[t._v("hkFilter")]),t._v("；也可以使用自定义的过滤器，例如 "),s("code",[t._v("customFilters.myFilter")]),t._v("；")])])]),t._v(" "),s("h4",{attrs:{id:"自定义参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义参数"}},[t._v("#")]),t._v(" 自定义参数")]),t._v(" "),s("p",[t._v("URL 中的 Query 参数能够传入到模板变量 "),s("code",[t._v("customParams")]),t._v(" 中，方便用户拓展模板。")]),t._v(" "),s("p",[t._v("比如：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("https://example.now.sh/get-artifact/Surge.conf?access_token=token&foo=bar\n")])])]),s("p",[t._v("那模板变量 "),s("code",[t._v("customParams.foo")]),t._v(" 值为 "),s("code",[t._v("bar")]),t._v("。如果已经在 Artifact 中定义了这个 Key，那预先定义的值将被覆盖。")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),s("ol",[s("li",[t._v("URL 参数中的值的类型都是字符串，形如 "),s("code",[t._v("true")]),t._v("、"),s("code",[t._v("1")]),t._v(" 这样的值在模板中是 "),s("code",[t._v('"true"')]),t._v(" 和 "),s("code",[t._v('"1"')]),t._v("；")]),t._v(" "),s("li",[s("code",[t._v("access_token")]),t._v(", "),s("code",[t._v("format")]),t._v(", "),s("code",[t._v("filter")]),t._v(", "),s("code",[t._v("dl")]),t._v(" 为保留 Key 无法被定义；")])])]),t._v(" "),s("h3",{attrs:{id:"直接导出-provider"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#直接导出-provider"}},[t._v("#")]),t._v(" 直接导出 Provider")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("GET /export-providers\n")])])]),s("Badge",{attrs:{text:"需要鉴权",vertical:"middle"}}),t._v(" "),s("p",[t._v("有时候你只想将 Provider 导出成类似 Surge Policy 或者其它格式的配置，那么可以借助这个功能快速达到目的，免去了新建一个 Artifact 的麻烦。即使这个 Provider 没有被任何一个 Artifact 使用，它也是能够被直接导出的！")]),t._v(" "),s("h4",{attrs:{id:"可选-url-参数-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可选-url-参数-2"}},[t._v("#")]),t._v(" 可选 URL 参数")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("参数")]),t._v(" "),s("th",[t._v("可选值")]),t._v(" "),s("th",[t._v("备注")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("format")])]),t._v(" "),s("td",[s("code",[t._v("surge-policy")]),t._v(", "),s("code",[t._v("qx-server")]),t._v(", "),s("code",[t._v("clash-provider")])]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[s("code",[t._v("template")])]),t._v(" "),s("td",[t._v("任意一个 "),s("code",[t._v(".tpl")]),t._v(" 文件")]),t._v(" "),s("td")]),t._v(" "),s("tr",[s("td",[s("code",[t._v("filter")])]),t._v(" "),s("td",[t._v("内置的过滤器或自定义过滤器")]),t._v(" "),s("td")])])]),t._v(" "),s("h4",{attrs:{id:"使用内置-format-导出"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用内置-format-导出"}},[t._v("#")]),t._v(" 使用内置 "),s("code",[t._v("format")]),t._v(" 导出")]),t._v(" "),s("p",[t._v("你可以在面板的 Provider 页面找到复制链接按钮。目前面板还不支持复制组装多个 Provider 的 URL。如果你想组装多个 Provider，可以修改 URL 中的 "),s("code",[t._v("providers")]),t._v(" 参数，多个 Provider 名称以逗号分隔，例如：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("https://example.com/export-providers?providers=maying,dlercloud&format=surge-policy\n")])])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("p",[t._v("合并多个 Provider 时，第一个 Provider 为主 Provider，遵循过滤器的合并规则。")])]),t._v(" "),s("h4",{attrs:{id:"指定-template-导出"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#指定-template-导出"}},[t._v("#")]),t._v(" 指定 Template 导出")]),t._v(" "),s("p",[t._v("你可以通过增加 URL 参数 "),s("code",[t._v("template")]),t._v(" 来制定使用某个 Template 来导出 Provider。值得一提的是，这种方法不需要新定义 Artifact。")]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("注意")]),t._v(" "),s("ol",[s("li",[t._v("参数 "),s("code",[t._v("template")]),t._v(" 和 "),s("code",[t._v("format")]),t._v(" 不能同时出现；")]),t._v(" "),s("li",[s("code",[t._v("filter")]),t._v(" 的值为过滤器的名称。你可以直接使用内置的过滤器，例如 "),s("code",[t._v("hkFilter")]),t._v("；也可以使用自定义的过滤器，例如 "),s("code",[t._v("customFilters.myFilter")]),t._v("；")])])]),t._v(" "),s("h3",{attrs:{id:"直接渲染模板"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#直接渲染模板"}},[t._v("#")]),t._v(" 直接渲染模板")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("GET /render?template=[template name]\n")])])]),s("p",[t._v("有时候我们并不需要将节点和规则完整的渲染出来，而是渲染某个模板。通过这个接口我们可以方便地渲染某个 Template，例如：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("https://example.com/render?template=static\n")])])]),s("p",[t._v("这样 Surgio 就会渲染仓库目录下 "),s("em",[t._v("./template/static.tpl")]),t._v(" 的内容。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("提示")]),t._v(" "),s("ol",[s("li",[t._v("只有 "),s("code",[t._v("downloadUrl")]),t._v(" 和 "),s("code",[t._v("getUrl")]),t._v(" 这两个模板变量（方法）有效；")]),t._v(" "),s("li",[t._v("你不可以在这里的模板中引用 "),s("code",[t._v("nodeList")]),t._v(" 之类的变量，因为根本不会解析节点；")]),t._v(" "),s("li",[t._v("子目录下的模板也是可以直接渲染的；")])])]),t._v(" "),s("h3",{attrs:{id:"正向代理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正向代理"}},[t._v("#")]),t._v(" 正向代理")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("/proxy/[url]\n")])])]),s("p",[t._v("这个正向代理可以让我们方便在没有梯子的情况下获取到一些下载困难的文件，同时也可以为远程片段加速。需要注意的是，正向代理不同于你常用的梯子。")]),t._v(" "),s("p",[t._v("这个功能依赖 "),s("a",{attrs:{href:"https://github.com/Rob--W/cors-anywhere",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rob--W/cors-anywhere"),s("OutboundLink")],1),t._v("。你可以通过设置以下两个环境变量来限制请求来源。")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("CORSANYWHERE_BLACKLIST")]),t._v("（对应 "),s("code",[t._v("originBlacklist")]),t._v("）")]),t._v(" "),s("li",[s("code",[t._v("CORSANYWHERE_WHITELIST")]),t._v("（对应 "),s("code",[t._v("originWhitelist")]),t._v("）")])]),t._v(" "),s("p",[t._v("使用方法：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("/proxy/https://github.com/lhie1/Rules/raw/master/Surge/Surge%203/Provider/Media/Netflix.list\n")])])])],1)}),[],!1,null,null,null);a.default=r.exports}}]);